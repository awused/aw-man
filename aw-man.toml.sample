# You can use the --awconf flag to override the config being loaded.

# The target resolution for upscaling in the form {WIDTH}x{HEIGHT}.
# The images will be upscaled to "fit" inside this resolution, but may not completely fill it.
# Should be set no higher than the resolution of the largest monitor you'll
# read manga on. It can be set lower to avoid upscaling pages that are already
# large enough.
# Set to '0x0' to disable upscaling entirely, regardless of cli flags or hotkeys.
# Setting 'WIDTHx0' or '0xHEIGHT' will upscale to at least that width/height, regardless
# of the other dimension.
# Example: target_resolution = '3840x2160'
target_resolution = '3840x2160'

# The minimum resolution for upscaling in the form {WIDTH}x{HEIGHT}.
# When upscaling happens the image will be upscaled to "fill" this resolution.
# This can be useful for tall and thin or short and wide images that aren't upscaled at all with
# normal target_resolution values.
# When this is set the image will be upscaled enough to satisfy both this and target_resolution.
# This setting upscales images at least as much as the equivalent target_resolution.
# This will be ignored if target_resolution is '0x0'.
minimum_resolution = ''

# Directory to store temporary files in, including extracting archives.
# Leave blank for the system default temp directory.
# It's fine to put this on relatively slow storage and it doesn't need to be in tmpfs.
temp_directory = ''

# How many future images to load into memory.
# In manga mode this causes future chapters to be extracted
# and upscaled to reach this number, if available.
# If this number is too low, alternate display modes like vertical strip may not work as expected.
preload_ahead = 10

# How many previous images to load into memory.
# In manga mode this causes previous chapters to be extracted
# to reach this number, if available.
# If this number is too low, alternate display modes like vertical strip may not work as expected.
preload_behind = 5

# The colour used for the background.
# This is any string understood by GDK, such as "black", "magenta", or "#55667788"
# Transparency is allowed but depends on the display server for support.
background_colour = '#000000be'

# The amount by which scrolling happens for discrete events.
# This applies to most mouse wheels and for "Scroll" actions.
scroll_amount = 300

# How long scrolling takes, in milliseconds.
# Affects the mouse wheel and the various ScrollUp/Down/etc commands.
# Set to zero to make scrolling instant
scroll_duration = 166

# The timeout, in seconds, for detecting idleness.
# When the application is idle for a long period of time then most preloaded images can be unloaded
# to reduce wasted memory.
# Comment out or set to 0 to disable.
idle_timeout = 600

# Shortcuts
#
# All shortcuts must have a key and an action, and optionally one or more modifiers.
# See the readme for details on the actions.
# Valid modifiers are Control, Shift, Alt, Super, and Command.
# See https://gitlab.gnome.org/GNOME/gtk/blob/master/gdk/gdkkeysyms.h for names of keys.
# Use uppercase letters.
#
# Examples:
# {key = "S", modifiers = "Control,Shift", action = "Execute /path/to/save-page.sh"},
# {key = "M", modifiers = "Control", action = "Execute /path/to/mangadex-url-clipboard.sh"},
# {key = "Down", modifiers = "Shift", action = "Jump +10"},
# {key = "Up", modifiers = "Shift", action = "Jump -10"},
# {key = "B", modifiers = "Shift", action = "SetBackground ffffffff"},
shortcuts = [
  {key = "question", modifiers = "Shift", action = "Help"},

  {key = "Down", action = "ScrollDown"},
  {key = "Up", action = "ScrollUp"},
  {key = "Right", action = "ScrollRight"},
  {key = "Left", action = "ScrollLeft"},

  {key = "Down", modifiers = "Shift", action = "SnapBottom"},
  {key = "Up", modifiers = "Shift", action = "SnapTop"},
  {key = "Right", modifiers = "Shift", action = "SnapRight"},
  {key = "Left", modifiers = "Shift", action = "SnapLeft"},

  {key = "Down", modifiers = "Control", action = "ScrollDown 1"},
  {key = "Up", modifiers = "Control", action = "ScrollUp 1"},
  {key = "Right", modifiers = "Control", action = "ScrollRight 1"},
  {key = "Left", modifiers = "Control", action = "ScrollLeft 1"},

  {key = "Page_Down", action = "NextPage"},
  {key = "Page_Up", action = "PreviousPage"},
  {key = "End", action = "LastPage"},
  {key = "Home", action = "FirstPage"},
  {key = "Escape", action = "Quit"},
  {key = "Q", action = "Quit"},
  {key = "Escape", modifiers = "Shift", action = "Quit nocommand"},
  {key = "Q", modifiers = "Shift", action = "Quit nocommand"},
  {key = "bracketright", action = "NextArchive"}, # ]
  {key = "bracketleft", action = "PreviousArchive"}, # [
  {key = "U", action = "Upscaling toggle"},
  {key = "H", action = "UI toggle"},
  {key = "B", action = "SetBackground"},
  {key = "F", action = "Fullscreen toggle"},
  {key = "M", action = "MangaMode toggle"},
  {key = "J", action = "Jump"},

  {key = "C", modifiers = "Control", action = "Copy"},
  {key = "O", modifiers = "Control", action = "Open"},
  {key = "O", modifiers = "Control, Shift", action = "OpenFolder"},

  {key = "F", modifiers = "Alt", action = "FullSize" },
  {key = "C", modifiers = "Alt", action = "FitToContainer" },
  {key = "W", modifiers = "Alt", action = "FitToWidth" },
  {key = "H", modifiers = "Alt", action = "FitToHeight" },

  {key = "S", modifiers = "Alt", action = "SinglePage"},
  {key = "V", modifiers = "Alt", action = "VerticalStrip"},
  {key = "O", modifiers = "Alt", action = "HorizontalStrip"},
  {key = "D", modifiers = "Alt", action = "DualPage"},
  {key = "R", modifiers = "Alt", action = "DualPageReversed"},

  {key = "space", action = "Playing toggle"},

  {key = "Page_Down", modifiers = "Control", action = "NextPage Current"},
  {key = "Page_Up", modifiers = "Control", action = "PreviousPage Current"},
]

# Context Menu
# All context menu items need a name and an action.
# Context menu entries are placed in the context menu in order.
# The set of allowable actions is the same as those for shortcuts.
#
# Sub-menus and sections can be specified by name.
# All commands sharing the same named sub-menu or section will be grouped together in order.
#
# Example:
# {name = "Save Page", action = "Execute /path/to/save-page.sh"},
# {name = "Sample Script", action = "Script /path/to/sample-script.sh"},
context_menu = [
  {name = "Container", submenu = "Fit", action = "FitToContainer"},
  {name = "Width", submenu = "Fit", action = "FitToWidth"},
  {name = "Height", submenu = "Fit", action = "FitToHeight"},
  {name = "Full", submenu = "Fit", action = "FullSize"},
  {name = "Single Page", section = "display", action = "SinglePage"},
  {name = "Vertical Strip", section = "display", action = "VerticalStrip"},
  {name = "Horizontal Strip", section = "display", action = "HorizontalStrip"},
  {name = "Dual Page", section = "display", action = "DualPage"},
  {name = "Dual Page (Reversed)", section = "display", action = "DualPageReversed"},
]

# VRAM available for GPU acceleration
# Processing, namely downscaling, on the GPU is much faster and less disruptive than on the CPU, but
# vram is usually more limited than system ram.
# This can increase the baseline memory usage of aw-man.
# This number does not affect the VRAM used to display images or used by the upscaler.
# Specify a whole number of gigabytes. Comment out or set to 0 to disable some gpu acceleration.
#
# No effect if the opencl feature is disabled.
gpu_vram_limit_gb = 2

# Only consider GPUs with names matching this prefix for acceleration.
# See the output of --show-gpus.
# Case sensitive. Leave empty or blank to pick the first GPU found.
# Example: "NVIDIA" to avoid using AMD/Intel igpus.
# gpu_prefix = ""

# Allow use of "unrar" binary, if available, for rar files.
# Some rar files are supported by libarchive but many are not.
# This is recommended but disabled by default.
allow_external_extractors = false

# ------------------------------------------------------------------------------------------------
# Application lifecycle hooks
# ------------------------------------------------------------------------------------------------
# These are all commands that run at different times during the application's lifecycle.


# Runs when aw-man starts up.
#
# This runs after any commands passed in with --command or --commands
startup_command = ""

# Runs whenever the current page changes, subject to debouncing if configured.
#
# This only runs when the page changes, not when the user intended to change it but it didn't
# change, such as at the end of the archive.
page_change_command = ""

# How many seconds to wait after the page changes to call `page_change_command`.
#
# The command will only called when the page does not change for this amount of time.
#
# Set this to 0 disable debouncing entirely. This is not recommended.
# page_change_debounce = 5

# Runs whenever the current archive changes.
# This can be used to maintain the current chapter even in manga mode.
#
# When the archive changes this will run immediately, with the page change command
# running second, subject to debouncing.
archive_change_command = ""

# Runs whenever the current modes change.
#
# This includes manga mode, upscaling, fit, and display modes.
mode_change_command = ""

# Runs when the aw-man becomes idle or stops being idle.
# Avoid any commands that will make aw-man stop being idle in idle_command.
# Any action that changes the display mode or the current page will end the idle state.
#
# As an example, these two commands will change the background colour to green when idle and red
# when it stops being idle.
# idle_command = "SetBackground green"
# unidle_command = "SetBackground red"
#
# These will never be triggered if idle_timeout is not set.
idle_command = ""
unidle_command = ""

# Runs on quit
# This only runs on clean exit from the "Quit" command or closing the main window.
# If aw-man is killed by signals from the OS, panics, or other crashes, this will not run.
#
# While aw-man will wait for any scripts to finish, the GUI will already be shutting down so it
# will not be responsive to commands from "Script"
quit_command = ""


# For automatic session saving using the example scripts (read them for customization):
#
# startup_command = "Execute /path/to/save-session.sh"
# page_change_command = "Execute /path/to/save-session.sh"
# archive_change_command = "Execute /path/to/save-session.sh"
# mode_change_command = "Execute /path/to/save-session.sh"
# idle_command = "Execute /path/to/save-session.sh"
# quit_command = "Execute /path/to/clear-session.sh"
#
# You can then restore all sessions that exit abnormally with examples/restore-session.sh.

# ------------------------------------------------------------------------------------------------
# More advanced configuration options below. They probably do not need to be changed.
# ------------------------------------------------------------------------------------------------

# Use a different upscaler instead of the default waifu2x-ncnn-vulkan implementation.
# The upscaler needs to be compatible with https://github.com/awused/aw-upscale
# alternate_upscaler = ""

# Whether to force the use of RGBA images, which are faster but consume more memory.
# By default aw-man prefers to save on memory by using RGB or greyscale formats when possible, but
# this results in much slower data uploads to the GPU than RGBA.
# The default is still very fast and should be unnoticeable, but RGBA can be forced for performance.
# force_rgba = false

# How many future images to upscale in advance.
# This will cause future chapters/archives to be extracted and upscaled even outside of manga mode.
# Set this high enough so that it stays ahead of your reading speed, but not so high that the GPU
# usage is annoying to you in other programs.
#
# The maximum number of images that will be actively upscaled at any one time,
# taking up memory, is given by max(preload_ahead, prescale) + preload_behind + 1.
# prescale = 0

# Allow vertical and horizontal strip modes to load more images to fill the viewport if the images
# are too small.
# No effect if smaller than preload_ahead.
# max_strip_preload_ahead = 0

# If set, create unix sockets in this directory for very simple IPC.
# One socket will be created for each running instance of aw-man.
# The sockets will be named "aw-man${PID}.sock" and will be listening for any requests.
# It will respond to requests with UTF-8 encoded JSON.
# Uncomment to enable.
# socket_dir = '/tmp/'

# The timeout, in seconds, for upscaling tasks.
# This should be set generously since it's only really intended to avoid blocking on hung processes.
# Comment out or set to 0 to disable, not recommended.
upscale_timeout = 60


# Thread Settings --------------------------------------------------------------------------------

# Files are extracted, then scanned, then possibly upscaled, then loaded into memory.

# It's very rare that the application will need to be extracting multiple files at once.
# default 2, higher numbers will very rarely matter.
# Each extraction also gets a few writer threads, so the true number of threads is more than this.
# extraction_threads = 2

# Loading can involve converting from expensive formats (HEIF/AVIF/etc) to faster formats.
# NFS can be temperamental so setting this lower may help.
# default max(logical cpu cores / 2, 2)
# This is the bottleneck for expensive formats.
# loading_threads = 8

# Upscaling is primarily limited by GPU throughput and VRAM with the default waifu2x-ncnn-vulkan.
# Each instance uses about 1.2GB of VRAM, not included in `gpu_vram_limit_gb` above.
# Using two threads will slightly increase throughput but greatly increase latency.
# default 1; values higher than 2 are not advised without switching to a cheaper upscaler.
# upscaling_threads = 1

# Downscaling can be cpu intensive.
# If you're noticing images "pop-in" after a second when downscaling, it's because aw-man downscales
# in linear light but will display images with naive gpu scaling before that completes.
# Increasing this can lower the latency for that pop-in.
# This is is the bottleneck for the most common formats that are easy to decode and large images.
# default max(logical cpu cores / 2, 4)
# downscaling_threads = 8


# ------------------------------------------------------------------------------------------------

